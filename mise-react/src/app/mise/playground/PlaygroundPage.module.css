.example__back-to-top {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 10;
}
.example__row {
    padding-bottom: 40px;
    margin-bottom: 40px;
}
.example__row .heading-with-margin {
    display: flex;
    align-items: center;
    gap: 4px;
}
.example__section-divider {
    display: flex;
    flex-wrap: wrap;
    gap: 16px;
    margin-bottom: 40px;
}
.example__color-shade-col {
    display: flex;
    align-items: center;
    gap: 16px;
    margin-bottom: 8px;
}
.example__color-shade {
    display: inline-block;
    width: 24px;
    height: 24px;
    border-radius: 4px;
}
.example__border-shade {
    display: inline-block;
    width: 24px;
    height: 24px;
    border-radius: 4px;
    border: 1px solid transparent;
}
.example__components-selector {
    margin-bottom: 60px;
    display: flex;
    flex-flow: column;
    gap: 24px;
}
.example__components-selector a {
    cursor: pointer;
    text-wrap: nowrap;
}
.example__options-switcher {
    align-items: center;
}



/* TODO: Copied this from the grid css. Somehow it's added everywhere I think */
.row {
    --gutter-column: var(--space-x4);
    --max-grid-width: min(calc(var(--theme-max-container) + var(--gutter-column)), 100%);
    --row-divider-color: var(--theme-divider-20, #f2f2f2);

    box-sizing: border-box;
    position: relative;
    display: flex;
    flex-wrap: wrap;
    max-width: calc(100vw + var(--gutter-column));
    height: max-content;
    margin-right: calc(var(--gutter-column) / -2);
    margin-left: calc(var(--gutter-column) / -2);
    row-gap: var(--gutter-column);
}

.row--divider:not(:last-of-type)::after {
    content: '';
    display: block;
    position: absolute;
    left: calc(var(--gutter-column) / 2);
    bottom: 0;
    width: calc(100% - var(--gutter-column));
    height: 1px;
    background: var(--row-divider-color);
}

.row > .col {
    box-sizing: border-box;
    flex: 0 0 calc(var(--max-grid-width) / 12 * var(--column));
    max-width: calc(var(--max-grid-width) / 12 * var(--column));
    padding-right: calc(var(--gutter-column) / 2);
    padding-left: calc(var(--gutter-column) / 2);
    transition: 0.1s ease-out;
}


/* NOTE: The Grid was dynamically creating these, so I evaluated it and then pasted it here */

/*
{% for column in range(1, 12) %}
    .row > .col[col-{{ column }}] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * {{ column }});
        max-width: calc(var(--max-grid-width) / 12 * {{ column }});
    }

    {% if column < 12 %}
        {% if column > 1 %}
            .row > .col[offset-{{ column }}] {
                margin-left: calc(var(--max-grid-width) / 12 * {{ column }} + var(--gutter-column));
            }
        {% else %}
            .row > .col[offset-{{ column }}] {
                margin-left: calc(var(--max-grid-width) / 12 * {{ column }});
            }
        {% endif %}

        .row > .col[offset-{{ column }}]:first-child {
            margin-left: calc(var(--max-grid-width) / 12 * {{ column }});
        }
    {% endif %}
{% endfor %}
*/

.row > .col[data-col-1] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 1);
    max-width: calc(var(--max-grid-width) / 12 * 1);
}

.row > .col[data-offset-1] {
    margin-left: calc(var(--max-grid-width) / 12 * 1);
}

.row > .col[data-offset-1]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 1);
}

.row > .col[data-col-2] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 2);
    max-width: calc(var(--max-grid-width) / 12 * 2);
}

.row > .col[data-offset-2] {
    margin-left: calc(var(--max-grid-width) / 12 * 2 + var(--gutter-column));
}

.row > .col[data-offset-2]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 2);
}

.row > .col[data-col-3] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 3);
    max-width: calc(var(--max-grid-width) / 12 * 3);
}

.row > .col[data-offset-3] {
    margin-left: calc(var(--max-grid-width) / 12 * 3 + var(--gutter-column));
}

.row > .col[data-offset-3]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 3);
}

.row > .col[data-col-4] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 4);
    max-width: calc(var(--max-grid-width) / 12 * 4);
}

.row > .col[data-offset-4] {
    margin-left: calc(var(--max-grid-width) / 12 * 4 + var(--gutter-column));
}

.row > .col[data-offset-4]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 4);
}

.row > .col[data-col-5] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 5);
    max-width: calc(var(--max-grid-width) / 12 * 5);
}

.row > .col[data-offset-5] {
    margin-left: calc(var(--max-grid-width) / 12 * 5 + var(--gutter-column));
}

.row > .col[data-offset-5]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 5);
}

.row > .col[data-col-6] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 6);
    max-width: calc(var(--max-grid-width) / 12 * 6);
}

.row > .col[data-offset-6] {
    margin-left: calc(var(--max-grid-width) / 12 * 6 + var(--gutter-column));
}

.row > .col[data-offset-6]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 6);
}

.row > .col[data-col-7] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 7);
    max-width: calc(var(--max-grid-width) / 12 * 7);
}

.row > .col[data-offset-7] {
    margin-left: calc(var(--max-grid-width) / 12 * 7 + var(--gutter-column));
}

.row > .col[data-offset-7]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 7);
}

.row > .col[data-col-8] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 8);
    max-width: calc(var(--max-grid-width) / 12 * 8);
}

.row > .col[data-offset-8] {
    margin-left: calc(var(--max-grid-width) / 12 * 8 + var(--gutter-column));
}

.row > .col[data-offset-8]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 8);
}

.row > .col[data-col-9] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 9);
    max-width: calc(var(--max-grid-width) / 12 * 9);
}

.row > .col[data-offset-9] {
    margin-left: calc(var(--max-grid-width) / 12 * 9 + var(--gutter-column));
}

.row > .col[data-offset-9]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 9);
}

.row > .col[data-col-10] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 10);
    max-width: calc(var(--max-grid-width) / 12 * 10);
}

.row > .col[data-offset-10] {
    margin-left: calc(var(--max-grid-width) / 12 * 10 + var(--gutter-column));
}

.row > .col[data-offset-10]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 10);
}

.row > .col[data-col-11] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 11);
    max-width: calc(var(--max-grid-width) / 12 * 11);
}

.row > .col[data-offset-11] {
    margin-left: calc(var(--max-grid-width) / 12 * 11 + var(--gutter-column));
}

.row > .col[data-offset-11]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 11);
}

.row > .col[data-col-12] {
    flex: 0 0 calc(var(--max-grid-width) / 12 * 12);
    max-width: calc(var(--max-grid-width) / 12 * 12);
}

.row > .col[data-offset-12] {
    margin-left: calc(var(--max-grid-width) / 12 * 12 + var(--gutter-column));
}

.row > .col[data-offset-12]:first-child {
    margin-left: calc(var(--max-grid-width) / 12 * 12);
}

/*
{% set breakpoints = { xs: 699, sm: 700, md: 992, lg: 1200, xl: 1600 } %}
{% for breakpoint in breakpoints|keys %}
    {% set mediaWidth = 'min-width' %}
    {% if breakpoint == 'xs' %}
        {% set mediaWidth = 'max-width' %}
    {% endif %}

    @media ({{ mediaWidth }}: {{ breakpoints[breakpoint] }}px) {

    {% for column in range(1, 12) %}
        .row > .col[col-{{ breakpoint }}-{{ column }}] {
            flex: 0 0 calc(var(--max-grid-width) / 12 * {{ column }});
            max-width: calc(var(--max-grid-width) / 12 * {{ column }});
        }

        {% if column < 12 %}
            {% if column > 1 %}
                .row > .col[offset-{{ breakpoint }}-{{ column }}] {
                    margin-left: calc(var(--max-grid-width) / 12 * {{ column }} + var(--gutter-column));
                }
            {% else %}
                .row > .col[offset-{{ breakpoint }}-{{ column }}] {
                    margin-left: calc(var(--max-grid-width) / 12 * {{ column }});
                }
            {% endif %}
        {% endif %}
    {% endfor %}

    }
{% endfor %}
*/

@media (max-width: 699px) {
    .row > .col[data-col-xs-1] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 1);
        max-width: calc(var(--max-grid-width) / 12 * 1);
    }
    .row > .col[data-offset-xs-1] {
        margin-left: calc(var(--max-grid-width) / 12 * 1);
    }
    .row > .col[data-col-xs-2] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 2);
        max-width: calc(var(--max-grid-width) / 12 * 2);
    }
    .row > .col[data-offset-xs-2] {
        margin-left: calc(var(--max-grid-width) / 12 * 2 + var(--gutter-column));
    }
    .row > .col[data-col-xs-3] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 3);
        max-width: calc(var(--max-grid-width) / 12 * 3);
    }
    .row > .col[data-offset-xs-3] {
        margin-left: calc(var(--max-grid-width) / 12 * 3 + var(--gutter-column));
    }
    .row > .col[data-col-xs-4] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 4);
        max-width: calc(var(--max-grid-width) / 12 * 4);
    }
    .row > .col[data-offset-xs-4] {
        margin-left: calc(var(--max-grid-width) / 12 * 4 + var(--gutter-column));
    }
    .row > .col[data-col-xs-5] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 5);
        max-width: calc(var(--max-grid-width) / 12 * 5);
    }
    .row > .col[data-offset-xs-5] {
        margin-left: calc(var(--max-grid-width) / 12 * 5 + var(--gutter-column));
    }
    .row > .col[data-col-xs-6] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 6);
        max-width: calc(var(--max-grid-width) / 12 * 6);
    }
    .row > .col[data-offset-xs-6] {
        margin-left: calc(var(--max-grid-width) / 12 * 6 + var(--gutter-column));
    }
    .row > .col[data-col-xs-7] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 7);
        max-width: calc(var(--max-grid-width) / 12 * 7);
    }
    .row > .col[data-offset-xs-7] {
        margin-left: calc(var(--max-grid-width) / 12 * 7 + var(--gutter-column));
    }
    .row > .col[data-col-xs-8] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 8);
        max-width: calc(var(--max-grid-width) / 12 * 8);
    }
    .row > .col[data-offset-xs-8] {
        margin-left: calc(var(--max-grid-width) / 12 * 8 + var(--gutter-column));
    }
    .row > .col[data-col-xs-9] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 9);
        max-width: calc(var(--max-grid-width) / 12 * 9);
    }
    .row > .col[data-offset-xs-9] {
        margin-left: calc(var(--max-grid-width) / 12 * 9 + var(--gutter-column));
    }
    .row > .col[data-col-xs-10] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 10);
        max-width: calc(var(--max-grid-width) / 12 * 10);
    }
    .row > .col[data-offset-xs-10] {
        margin-left: calc(var(--max-grid-width) / 12 * 10 + var(--gutter-column));
    }
    .row > .col[data-col-xs-11] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 11);
        max-width: calc(var(--max-grid-width) / 12 * 11);
    }
    .row > .col[data-offset-xs-11] {
        margin-left: calc(var(--max-grid-width) / 12 * 11 + var(--gutter-column));
    }
    .row > .col[data-col-xs-12] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 12);
        max-width: calc(var(--max-grid-width) / 12 * 12);
    }
    .row > .col[data-offset-xs-12] {
        margin-left: calc(var(--max-grid-width) / 12 * 12 + var(--gutter-column));
    }
}

@media (min-width: 700px) {
    .row > .col[data-col-sm-1] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 1);
        max-width: calc(var(--max-grid-width) / 12 * 1);
    }
    .row > .col[data-offset-sm-1] {
        margin-left: calc(var(--max-grid-width) / 12 * 1);
    }
    .row > .col[data-col-sm-2] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 2);
        max-width: calc(var(--max-grid-width) / 12 * 2);
    }
    .row > .col[data-offset-sm-2] {
        margin-left: calc(var(--max-grid-width) / 12 * 2 + var(--gutter-column));
    }
    .row > .col[data-col-sm-3] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 3);
        max-width: calc(var(--max-grid-width) / 12 * 3);
    }
    .row > .col[data-offset-sm-3] {
        margin-left: calc(var(--max-grid-width) / 12 * 3 + var(--gutter-column));
    }
    .row > .col[data-col-sm-4] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 4);
        max-width: calc(var(--max-grid-width) / 12 * 4);
    }
    .row > .col[data-offset-sm-4] {
        margin-left: calc(var(--max-grid-width) / 12 * 4 + var(--gutter-column));
    }
    .row > .col[data-col-sm-5] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 5);
        max-width: calc(var(--max-grid-width) / 12 * 5);
    }
    .row > .col[data-offset-sm-5] {
        margin-left: calc(var(--max-grid-width) / 12 * 5 + var(--gutter-column));
    }
    .row > .col[data-col-sm-6] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 6);
        max-width: calc(var(--max-grid-width) / 12 * 6);
    }
    .row > .col[data-offset-sm-6] {
        margin-left: calc(var(--max-grid-width) / 12 * 6 + var(--gutter-column));
    }
    .row > .col[data-col-sm-7] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 7);
        max-width: calc(var(--max-grid-width) / 12 * 7);
    }
    .row > .col[data-offset-sm-7] {
        margin-left: calc(var(--max-grid-width) / 12 * 7 + var(--gutter-column));
    }
    .row > .col[data-col-sm-8] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 8);
        max-width: calc(var(--max-grid-width) / 12 * 8);
    }
    .row > .col[data-offset-sm-8] {
        margin-left: calc(var(--max-grid-width) / 12 * 8 + var(--gutter-column));
    }
    .row > .col[data-col-sm-9] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 9);
        max-width: calc(var(--max-grid-width) / 12 * 9);
    }
    .row > .col[data-offset-sm-9] {
        margin-left: calc(var(--max-grid-width) / 12 * 9 + var(--gutter-column));
    }
    .row > .col[data-col-sm-10] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 10);
        max-width: calc(var(--max-grid-width) / 12 * 10);
    }
    .row > .col[data-offset-sm-10] {
        margin-left: calc(var(--max-grid-width) / 12 * 10 + var(--gutter-column));
    }
    .row > .col[data-col-sm-11] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 11);
        max-width: calc(var(--max-grid-width) / 12 * 11);
    }
    .row > .col[data-offset-sm-11] {
        margin-left: calc(var(--max-grid-width) / 12 * 11 + var(--gutter-column));
    }
    .row > .col[data-col-sm-12] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 12);
        max-width: calc(var(--max-grid-width) / 12 * 12);
    }
    .row > .col[data-offset-sm-12] {
        margin-left: calc(var(--max-grid-width) / 12 * 12 + var(--gutter-column));
    }
}

@media (min-width: 992px) {
    .row > .col[data-col-md-1] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 1);
        max-width: calc(var(--max-grid-width) / 12 * 1);
    }
    .row > .col[data-offset-md-1] {
        margin-left: calc(var(--max-grid-width) / 12 * 1);
    }
    .row > .col[data-col-md-2] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 2);
        max-width: calc(var(--max-grid-width) / 12 * 2);
    }
    .row > .col[data-offset-md-2] {
        margin-left: calc(var(--max-grid-width) / 12 * 2 + var(--gutter-column));
    }
    .row > .col[data-col-md-3] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 3);
        max-width: calc(var(--max-grid-width) / 12 * 3);
    }
    .row > .col[data-offset-md-3] {
        margin-left: calc(var(--max-grid-width) / 12 * 3 + var(--gutter-column));
    }
    .row > .col[data-col-md-4] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 4);
        max-width: calc(var(--max-grid-width) / 12 * 4);
    }
    .row > .col[data-offset-md-4] {
        margin-left: calc(var(--max-grid-width) / 12 * 4 + var(--gutter-column));
    }
    .row > .col[data-col-md-5] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 5);
        max-width: calc(var(--max-grid-width) / 12 * 5);
    }
    .row > .col[data-offset-md-5] {
        margin-left: calc(var(--max-grid-width) / 12 * 5 + var(--gutter-column));
    }
    .row > .col[data-col-md-6] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 6);
        max-width: calc(var(--max-grid-width) / 12 * 6);
    }
    .row > .col[data-offset-md-6] {
        margin-left: calc(var(--max-grid-width) / 12 * 6 + var(--gutter-column));
    }
    .row > .col[data-col-md-7] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 7);
        max-width: calc(var(--max-grid-width) / 12 * 7);
    }
    .row > .col[data-offset-md-7] {
        margin-left: calc(var(--max-grid-width) / 12 * 7 + var(--gutter-column));
    }
    .row > .col[data-col-md-8] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 8);
        max-width: calc(var(--max-grid-width) / 12 * 8);
    }
    .row > .col[data-offset-md-8] {
        margin-left: calc(var(--max-grid-width) / 12 * 8 + var(--gutter-column));
    }
    .row > .col[data-col-md-9] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 9);
        max-width: calc(var(--max-grid-width) / 12 * 9);
    }
    .row > .col[data-offset-md-9] {
        margin-left: calc(var(--max-grid-width) / 12 * 9 + var(--gutter-column));
    }
    .row > .col[data-col-md-10] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 10);
        max-width: calc(var(--max-grid-width) / 12 * 10);
    }
    .row > .col[data-offset-md-10] {
        margin-left: calc(var(--max-grid-width) / 12 * 10 + var(--gutter-column));
    }
    .row > .col[data-col-md-11] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 11);
        max-width: calc(var(--max-grid-width) / 12 * 11);
    }
    .row > .col[data-offset-md-11] {
        margin-left: calc(var(--max-grid-width) / 12 * 11 + var(--gutter-column));
    }
    .row > .col[data-col-md-12] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 12);
        max-width: calc(var(--max-grid-width) / 12 * 12);
    }
    .row > .col[data-offset-md-12] {
        margin-left: calc(var(--max-grid-width) / 12 * 12 + var(--gutter-column));
    }
}

@media (min-width: 1200px) {
    .row > .col[data-col-lg-1] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 1);
        max-width: calc(var(--max-grid-width) / 12 * 1);
    }
    .row > .col[data-offset-lg-1] {
        margin-left: calc(var(--max-grid-width) / 12 * 1);
    }
    .row > .col[data-col-lg-2] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 2);
        max-width: calc(var(--max-grid-width) / 12 * 2);
    }
    .row > .col[data-offset-lg-2] {
        margin-left: calc(var(--max-grid-width) / 12 * 2 + var(--gutter-column));
    }
    .row > .col[data-col-lg-3] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 3);
        max-width: calc(var(--max-grid-width) / 12 * 3);
    }
    .row > .col[data-offset-lg-3] {
        margin-left: calc(var(--max-grid-width) / 12 * 3 + var(--gutter-column));
    }
    .row > .col[data-col-lg-4] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 4);
        max-width: calc(var(--max-grid-width) / 12 * 4);
    }
    .row > .col[data-offset-lg-4] {
        margin-left: calc(var(--max-grid-width) / 12 * 4 + var(--gutter-column));
    }
    .row > .col[data-col-lg-5] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 5);
        max-width: calc(var(--max-grid-width) / 12 * 5);
    }
    .row > .col[data-offset-lg-5] {
        margin-left: calc(var(--max-grid-width) / 12 * 5 + var(--gutter-column));
    }
    .row > .col[data-col-lg-6] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 6);
        max-width: calc(var(--max-grid-width) / 12 * 6);
    }
    .row > .col[data-offset-lg-6] {
        margin-left: calc(var(--max-grid-width) / 12 * 6 + var(--gutter-column));
    }
    .row > .col[data-col-lg-7] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 7);
        max-width: calc(var(--max-grid-width) / 12 * 7);
    }
    .row > .col[data-offset-lg-7] {
        margin-left: calc(var(--max-grid-width) / 12 * 7 + var(--gutter-column));
    }
    .row > .col[data-col-lg-8] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 8);
        max-width: calc(var(--max-grid-width) / 12 * 8);
    }
    .row > .col[data-offset-lg-8] {
        margin-left: calc(var(--max-grid-width) / 12 * 8 + var(--gutter-column));
    }
    .row > .col[data-col-lg-9] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 9);
        max-width: calc(var(--max-grid-width) / 12 * 9);
    }
    .row > .col[data-offset-lg-9] {
        margin-left: calc(var(--max-grid-width) / 12 * 9 + var(--gutter-column));
    }
    .row > .col[data-col-lg-10] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 10);
        max-width: calc(var(--max-grid-width) / 12 * 10);
    }
    .row > .col[data-offset-lg-10] {
        margin-left: calc(var(--max-grid-width) / 12 * 10 + var(--gutter-column));
    }
    .row > .col[data-col-lg-11] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 11);
        max-width: calc(var(--max-grid-width) / 12 * 11);
    }
    .row > .col[data-offset-lg-11] {
        margin-left: calc(var(--max-grid-width) / 12 * 11 + var(--gutter-column));
    }
    .row > .col[data-col-lg-12] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 12);
        max-width: calc(var(--max-grid-width) / 12 * 12);
    }
    .row > .col[data-offset-lg-12] {
        margin-left: calc(var(--max-grid-width) / 12 * 12 + var(--gutter-column));
    }
}

@media (min-width: 1600px) {

    .row > .col[data-col-xl-1] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 1);
        max-width: calc(var(--max-grid-width) / 12 * 1);
    }

    .row > .col[data-col-xl-2] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 2);
        max-width: calc(var(--max-grid-width) / 12 * 2);
    }

    .row > .col[data-col-xl-3] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 3);
        max-width: calc(var(--max-grid-width) / 12 * 3);
    }

    .row > .col[data-col-xl-4] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 4);
        max-width: calc(var(--max-grid-width) / 12 * 4);
    }

    .row > .col[data-col-xl-5] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 5);
        max-width: calc(var(--max-grid-width) / 12 * 5);
    }

    .row > .col[data-col-xl-6] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 6);
        max-width: calc(var(--max-grid-width) / 12 * 6);
    }

    .row > .col[data-col-xl-7] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 7);
        max-width: calc(var(--max-grid-width) / 12 * 7);
    }

    .row > .col[data-col-xl-8] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 8);
        max-width: calc(var(--max-grid-width) / 12 * 8);
    }

    .row > .col[data-col-xl-9] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 9);
        max-width: calc(var(--max-grid-width) / 12 * 9);
    }

    .row > .col[data-col-xl-10] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 10);
        max-width: calc(var(--max-grid-width) / 12 * 10);
    }

    .row > .col[data-col-xl-11] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 11);
        max-width: calc(var(--max-grid-width) / 12 * 11);
    }

    .row > .col[data-col-xl-12] {
        flex: 0 0 calc(var(--max-grid-width) / 12 * 12);
        max-width: calc(var(--max-grid-width) / 12 * 12);
    }

    .row > .col[data-offset-xl-1] {
        margin-left: calc(var(--max-grid-width) / 12 * 1);
    }

    .row > .col[data-offset-xl-2] {
        margin-left: calc(var(--max-grid-width) / 12 * 2 + var(--gutter-column));
    }

    .row > .col[data-offset-xl-3] {
        margin-left: calc(var(--max-grid-width) / 12 * 3 + var(--gutter-column));
    }

    .row > .col[data-offset-xl-4] {
        margin-left: calc(var(--max-grid-width) / 12 * 4 + var(--gutter-column));
    }

    .row > .col[data-offset-xl-5] {
        margin-left: calc(var(--max-grid-width) / 12 * 5 + var(--gutter-column));
    }

    .row > .col[data-offset-xl-6] {
        margin-left: calc(var(--max-grid-width) / 12 * 6 + var(--gutter-column));
    }

    .row > .col[data-offset-xl-7] {
        margin-left: calc(var(--max-grid-width) / 12 * 7 + var(--gutter-column));
    }

    .row > .col[data-offset-xl-8] {
        margin-left: calc(var(--max-grid-width) / 12 * 8 + var(--gutter-column));
    }

    .row > .col[data-offset-xl-9] {
        margin-left: calc(var(--max-grid-width) / 12 * 9 + var(--gutter-column));
    }

    .row > .col[data-offset-xl-10] {
        margin-left: calc(var(--max-grid-width) / 12 * 10 + var(--gutter-column));
    }

    .row > .col[data-offset-xl-11] {
        margin-left: calc(var(--max-grid-width) / 12 * 11 + var(--gutter-column));
    }

    .row > .col[data-offset-xl-12] {
        margin-left: calc(var(--max-grid-width) / 12 * 12 + var(--gutter-column));
    }

}