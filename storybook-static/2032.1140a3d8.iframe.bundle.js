"use strict";(self.webpackChunkmise_react=self.webpackChunkmise_react||[]).push([[2032],{"./node_modules/.pnpm/@market+web-components@6.12.0/node_modules/@market/web-components/dist/esm/market-qrcode.entry.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{market_qrcode:()=>MarketQrcode});var _index_fb35cab8_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/@market+web-components@6.12.0/node_modules/@market/web-components/dist/esm/index-fb35cab8.js");const ALIGNMENT_PATTERN_LOCATIONS=Object.freeze([[],[4,16],[4,20],[4,24],[4,28],[4,32],[4,20,36],[4,22,40],[4,24,44],[4,26,48],[4,28,52],[4,30,56],[4,32,60],[4,24,44,64],[4,24,46,68],[4,24,48,72],[4,28,52,76],[4,28,54,80],[4,28,56,84],[4,32,60,88],[4,26,48,70,92],[4,24,48,72,96],[4,28,52,76,100],[4,26,52,78,104],[4,30,56,82,108],[4,28,56,84,112],[4,32,60,88,116],[4,24,48,72,96,120],[4,28,52,76,100,124],[4,24,50,76,102,128],[4,28,54,80,106,132],[4,32,58,84,110,136],[4,28,56,84,112,140],[4,32,60,88,116,144],[4,28,52,76,100,124,148],[4,22,48,74,100,126,152],[4,26,52,78,104,130,156],[4,30,56,82,108,134,160],[4,24,52,80,108,136,164],[4,28,56,84,112,140,168]]),DATA_CAPACITY=Object.freeze({LOW:[19,34,55,80,108,136,156,194,232,274,324,370,428,461,523,589,647,721,795,861,932,1006,1094,1174,1276,1370,1468,1531,1631,1735,1843,1955,2071,2191,2306,2434,2566,2702,2812,2956],MEDIUM:[16,28,44,64,86,108,124,154,182,216,254,290,334,365,415,453,507,563,627,669,714,782,860,914,1e3,1062,1128,1193,1267,1373,1455,1541,1631,1725,1812,1914,1992,2102,2216,2334],QUARTER:[13,22,34,48,62,76,88,110,132,154,180,206,244,261,295,325,367,397,445,485,512,568,614,664,718,754,808,871,911,985,1033,1115,1171,1231,1286,1354,1426,1502,1582,1666],HIGH:[9,16,26,36,46,60,66,86,100,122,140,158,180,197,223,253,283,313,341,385,406,442,464,514,538,596,628,661,701,745,793,845,901,961,986,1054,1096,1142,1222,1276]}),ENCODING=Object.freeze({NUMERIC:"NUMERIC",ALPHANUMERIC:"ALPHANUMERIC",KANJI:"KANJI",BYTE:"BYTE"}),ERROR_CORRECTION=Object.freeze({LOW:"LOW",MEDIUM:"MEDIUM",QUARTER:"QUARTER",HIGH:"HIGH"});class BitWriter{constructor(length){this.length=length,this.content=new Uint8Array(length),this.byte=0,this.bit=0}get bitsLeft(){return 8*(this.length-this.byte)-this.bit}get bytesLeft(){return 0===this.bit?this.length-this.byte:this.length-this.byte-1}codeForAlphaNUMERICal(char){const lookIn="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:";for(let index=0;index<45;index++)if(lookIn[index]===char)return index}completeByte(){0!==this.bit&&(this.bit=0,this.byte++)}nextPutAlphaNUMERIC(string){for(let last=1;last<string.length;last+=2)this.nextPutBits(45*this.codeForAlphaNUMERICal(string[last-1])+this.codeForAlphaNUMERICal(string[last]),11);string.length%2==1&&this.nextPutBits(this.codeForAlphaNUMERICal(string[string.length-1]),6)}nextPutBits(int,bits){if(0===bits)return;let amount=this.bit+bits;if(amount<8)this.content[this.byte]=this.content[this.byte]|int<<8-amount,this.bit+=bits;else if(8===amount)this.content[this.byte]=this.content[this.byte]|int,this.byte++,this.bit=0;else{amount-=8;let shift=int>>amount;this.content[this.byte]=this.content[this.byte]|shift,shift=int-(shift<<amount),this.byte++,this.bit=0,this.nextPutBits(shift,amount)}}nextPutByte(byteArray){byteArray.forEach((byte=>{this.nextPutBits(byte,8)}))}nextPutCompleteByte(byte){this.completeByte(),this.content[this.byte]=byte,this.byte++}nextPutKanji(string){for(let index=0;index<string.length;index++){let charCode=string.charCodeAt(index);charCode-=charCode<=40956?33088:49472;let lByte=charCode%256,bByte=(charCode-lByte)/256;this.nextPutBits(192*bByte+lByte,13)}}nextPutNumeric(string){const asNumbers=[];for(let index=0;index<string.length;index++)asNumbers.push(string.charCodeAt(index)-48);for(let last=2;last<string.length;last+=3)this.nextPutBits(100*asNumbers[last-2]+10*asNumbers[last-1]+asNumbers[last],10);switch(string.length%3){case 0:break;case 1:this.nextPutBits(asNumbers[string.length-1],4);break;case 2:this.nextPutBits(10*asNumbers[string.length-2]+asNumbers[string.length-1],7)}}}class Matrix$1{static withAll(width,height,fill){const content=[];if(void 0===fill)for(let row=0;row<height;row++)content.push(new Array(width));else for(let row=0;row<height;row++)content.push(new Array(width).fill(fill));return new this(content)}constructor(content){this.content=content}at(x,y){return this.content[y][x]}copy(){return new this.constructor(this.content.map((row=>row.slice())))}fill(x,y,width,height,value){for(let top=y;top<y+height;top++){let row=this.content[top];for(let col=x;col<x+width;col++)row[col]=value}}get height(){return this.content.length}put(x,y,value){return this.content[y][x]=value}get width(){return this.content[0].length}}class BooleanMatrix extends Matrix$1{static forIntegerArray(width,height,array){const content=[];for(let y=0;y<height;y++){let rowInteger=array[y];const row=[];for(let x=width-1;x>=0;x--)rowInteger%2==1?(row.unshift(!0),rowInteger--):row.unshift(!1),rowInteger/=2;content.push(row)}return new this(content)}asIntegerArray(){return this.content.map((row=>{let integer=0;return row.forEach((bool=>{integer*=2,!0===bool&&integer++})),integer}))}bitAt(x,y){return this.at(x,y)?1:0}fillAlignmentPatternAt(x,y){for(let size=0;size<4;size++)this.content[y][x+size]=!0,this.content[y+4][x+size+1]=!0,this.content[y+1+size][x]=!0,this.content[y+size][x+4]=!0;this.content[y+2][x+2]=!0}fillFinderPatternAt(x,y){for(let size=0;size<6;size++)this.content[y][x+size]=!0,this.content[y+6][x+size+1]=!0,this.content[y+1+size][x]=!0,this.content[y+size][x+6]=!0;this.fill(x+2,y+2,3,3,!0)}}class QRCodeMap extends Matrix$1{static chunkingAt(errorCorrection,version){return{LOW:[[[1,26,19]],[[1,44,34]],[[1,70,55]],[[1,100,80]],[[1,134,108]],[[2,86,68]],[[2,98,78]],[[2,121,97]],[[2,146,116]],[[2,86,68],[2,87,69]],[[4,101,81]],[[2,116,92],[2,117,93]],[[4,133,107]],[[3,145,115],[1,146,116]],[[5,109,87],[1,110,88]],[[5,122,98],[1,123,99]],[[1,135,107],[5,136,108]],[[5,150,120],[1,151,121]],[[3,141,113],[4,142,114]],[[3,135,107],[5,136,108]],[[4,144,116],[4,145,117]],[[2,139,111],[7,140,112]],[[4,151,121],[5,152,122]],[[6,147,117],[4,148,118]],[[8,132,106],[4,133,107]],[[10,142,114],[2,143,115]],[[8,152,122],[4,153,123]],[[3,147,117],[10,148,118]],[[7,146,116],[7,147,117]],[[5,145,115],[10,146,116]],[[13,145,115],[3,146,116]],[[17,145,115]],[[17,145,115],[1,146,116]],[[13,145,115],[6,146,116]],[[12,151,121],[7,152,122]],[[6,151,121],[14,152,122]],[[17,152,122],[4,153,123]],[[4,152,122],[18,153,123]],[[20,147,117],[4,148,118]],[[19,148,118],[6,149,119]]],HIGH:[[[1,26,9]],[[1,44,16]],[[2,35,13]],[[4,25,9]],[[2,33,11],[2,34,12]],[[4,43,15]],[[4,39,13],[1,40,14]],[[4,40,14],[2,41,15]],[[4,36,12],[4,37,13]],[[6,43,15],[2,44,16]],[[3,36,12],[8,37,13]],[[7,42,14],[4,43,15]],[[12,33,11],[4,34,12]],[[11,36,12],[5,37,13]],[[11,36,12],[7,37,13]],[[3,45,15],[13,46,16]],[[2,42,14],[17,43,15]],[[2,42,14],[19,43,15]],[[9,39,13],[16,40,14]],[[15,43,15],[10,44,16]],[[19,46,16],[6,47,17]],[[34,37,13]],[[16,45,15],[14,46,16]],[[30,46,16],[2,47,17]],[[22,45,15],[13,46,16]],[[33,46,16],[4,47,17]],[[12,45,15],[28,46,16]],[[11,45,15],[31,46,16]],[[19,45,15],[26,46,16]],[[23,45,15],[25,46,16]],[[23,45,15],[28,46,16]],[[19,45,15],[35,46,16]],[[11,45,15],[46,46,16]],[[59,46,16],[1,47,17]],[[22,45,15],[41,46,16]],[[2,45,15],[64,46,16]],[[24,45,15],[46,46,16]],[[42,45,15],[32,46,16]],[[10,45,15],[67,46,16]],[[20,45,15],[61,46,16]]],MEDIUM:[[[1,26,16]],[[1,44,28]],[[1,70,44]],[[2,50,32]],[[2,67,43]],[[4,43,27]],[[4,49,31]],[[2,60,38],[2,61,39]],[[3,58,36],[2,59,37]],[[4,69,43],[1,70,44]],[[1,80,50],[4,81,51]],[[6,58,36],[2,59,37]],[[8,59,37],[1,60,38]],[[4,64,40],[5,65,41]],[[5,65,41],[5,66,42]],[[7,73,45],[3,74,46]],[[10,74,46],[1,75,47]],[[9,69,43],[4,70,44]],[[3,70,44],[11,71,45]],[[3,67,41],[13,68,42]],[[17,68,42]],[[17,74,46]],[[4,75,47],[14,76,48]],[[6,73,45],[14,74,46]],[[8,75,47],[13,76,48]],[[19,74,46],[4,75,47]],[[22,73,45],[3,74,46]],[[3,73,45],[23,74,46]],[[21,73,45],[7,74,46]],[[19,75,47],[10,76,48]],[[2,74,46],[29,75,47]],[[10,74,46],[23,75,47]],[[14,74,46],[21,75,47]],[[14,74,46],[23,75,47]],[[12,75,47],[26,76,48]],[[6,75,47],[34,76,48]],[[29,74,46],[14,75,47]],[[13,74,46],[32,75,47]],[[40,75,47],[7,76,48]],[[18,75,47],[31,76,48]]],QUARTER:[[[1,26,13]],[[1,44,22]],[[2,35,17]],[[2,50,24]],[[2,33,15],[2,34,16]],[[4,43,19]],[[2,32,14],[4,33,15]],[[4,40,18],[2,41,19]],[[4,36,16],[4,37,17]],[[6,43,19],[2,44,20]],[[4,50,22],[4,51,23]],[[4,46,20],[6,47,21]],[[8,44,20],[4,45,21]],[[11,36,16],[5,37,17]],[[5,54,24],[7,55,25]],[[15,43,19],[2,44,20]],[[1,50,22],[15,51,23]],[[17,50,22],[1,51,23]],[[17,47,21],[4,48,22]],[[15,54,24],[5,55,25]],[[17,50,22],[6,51,23]],[[7,54,24],[16,55,25]],[[11,54,24],[14,55,25]],[[11,54,24],[16,55,25]],[[7,54,24],[22,55,25]],[[28,50,22],[6,51,23]],[[8,53,23],[26,54,24]],[[4,54,24],[31,55,25]],[[1,53,23],[37,54,24]],[[15,54,24],[25,55,25]],[[42,54,24],[1,55,25]],[[10,54,24],[35,55,25]],[[29,54,24],[19,55,25]],[[44,54,24],[7,55,25]],[[39,54,24],[14,55,25]],[[46,54,24],[10,55,25]],[[49,54,24],[10,55,25]],[[48,54,24],[14,55,25]],[[43,54,24],[22,55,25]],[[34,54,24],[34,55,25]]]}[errorCorrection][version-1]}static fromGF256Alpha(index){return[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142][index]}static polynomial(size){if(this.polynomials.length>=size)return this.polynomials[size-1];let polynomial=this.polynomials[this.polynomials.length-1];for(let multiplier=this.polynomials.length;multiplier<size;multiplier++){let factor=new Uint8Array(2);factor[1]=multiplier,polynomial=this.product(polynomial,factor),this.polynomials.push(polynomial)}return polynomial}static product(first,second){let product=new Uint8Array(first.length+second.length-1);return first.forEach(((firstValue,firstIndex)=>{second.forEach(((secondValue,secondIndex)=>{let productIndex=firstIndex+secondIndex;product[productIndex]=this.fromGF256Alpha((firstValue+secondValue)%255)^product[productIndex]}))})),product.map((entry=>this.toGF256Alpha(entry)))}static quotient(dividend,divisor){let quotient=new Uint8Array(dividend.length+divisor.length-1);for(let index=0;index<dividend.length;index++)quotient[index]=dividend[index];for(let dividendIndex=0;dividendIndex<dividend.length;dividendIndex++){let startEntry=quotient[dividendIndex];0!==startEntry&&(startEntry=this.toGF256Alpha(startEntry),divisor.forEach(((alpha,divisorIndex)=>{let quotientIndex=dividendIndex+divisorIndex;quotient[quotientIndex]=this.fromGF256Alpha((startEntry+alpha)%255)^quotient[quotientIndex]})))}return quotient.slice(quotient.length-divisor.length+1)}static toGF256Alpha(index){return[0,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175][index]}static get masks(){return 0===this.maskArray.length&&[(x,y)=>(x+y)%2==0,(x,y)=>y%2==0,x=>x%3==0,(x,y)=>(x+y)%3==0,(x,y)=>((y-y%2)/2+(x-x%3)/3)%2==0,(x,y)=>x*y%2+x*y%3==0,(x,y)=>(x*y+x*y%3)%2==0,(x,y)=>(x*y%3+x+y)%2==0].forEach((generator=>{const content=[];for(let y=0;y<12;y++){const row=[];for(let x=0;x<12;x++)row.push(generator(x,y));content.push(row)}this.maskArray.push(new BooleanMatrix(content))})),this.maskArray}static for(errorCorrection,version){let instance=this.instances[errorCorrection+version];if(void 0===instance){const dimension=4*version+17,content=[];for(let row=0;row<dimension;row++)content.push(new Array(dimension).fill(this.AVAILABLE));instance=new this(content,errorCorrection,version),this.instances[errorCorrection+version]=instance}return instance}constructor(content,errorCorrection,version){super(content),this.errorCorrection=errorCorrection,this.version=version,this.initialize()}initialize(){let misdecodeProtectionCodewords=0;this.errorCorrection===ERROR_CORRECTION.LOW?1===this.version?misdecodeProtectionCodewords=3:2===this.version?misdecodeProtectionCodewords=2:3===this.version&&(misdecodeProtectionCodewords=1):1===this.version&&(misdecodeProtectionCodewords=this.errorCorrection===ERROR_CORRECTION.MEDIUM?2:1),this.chunking=this.constructor.chunkingAt(this.errorCorrection,this.version);const data=[],errorCorrection=[];let dataWidth=0,errorCorrectionWidth=0;const errorCorrectionCapacity=[],chunkingOffsets=[];let chunkingOffset=0,chunk=0;this.chunking.forEach((arr=>{for(let i=0;i<arr[0];i++){let byte=0;chunkingOffsets.push(8*chunkingOffset),chunkingOffset+=arr[1];const dataI=[],numberOfDataCodewords=arr[2];for(let j=0;j<numberOfDataCodewords;j++)dataI.push({chunk,byte}),byte++;data.push(dataI),dataWidth=Math.max(dataWidth,dataI.length);const errorCorrectionI=[],numberOfErrorCorrectionCodewords=arr[1]-numberOfDataCodewords;for(let j=0;j<numberOfErrorCorrectionCodewords;j++)errorCorrectionI.push({chunk,byte}),byte++;errorCorrection.push(errorCorrectionI),errorCorrectionWidth=Math.max(errorCorrectionWidth,errorCorrectionI.length),errorCorrectionCapacity.push(numberOfErrorCorrectionCodewords-misdecodeProtectionCodewords),chunk++}})),this.chunkingOffsets=chunkingOffsets,this.errorCorrectionCapacity=errorCorrectionCapacity;const combined=[];for(let column=0;column<dataWidth;column++)data.forEach((row=>{row.length>column&&combined.push(row[column])}));for(let column=0;column<errorCorrectionWidth;column++)errorCorrection.forEach((row=>{row.length>column&&combined.push(row[column])}));const pixels=[];combined.forEach((byteAndChunk=>{const byte=byteAndChunk.byte,chunk=byteAndChunk.chunk;for(let bit=0;bit<8;bit++)pixels.push({chunk,byte,bit})}));const dimension=this.width;this.fill(0,0,9,9,this.constructor.AVOID),this.fill(dimension-8,0,8,9,this.constructor.AVOID),this.fill(0,dimension-8,9,8,this.constructor.AVOID),this.version>6&&(this.fill(dimension-11,0,3,6,this.constructor.AVOID),this.fill(0,dimension-11,6,3,this.constructor.AVOID)),this.fill(9,6,dimension-17,1,this.constructor.AVOID),this.fill(6,9,1,dimension-17,this.constructor.AVOID);for(const position of QRCode$1.alignmentPatternPositions(this.version))this.fill(position.x,position.y,5,5,this.constructor.AVOID);let x=dimension-2,y=dimension;pixels.forEach((pixel=>{do{let shift,halfOdd=(x-x%2)/2%2==1;6===x?(shift=!1,x=5):shift=x<6?x%2==1:x%2==0,shift?x--:halfOdd?0===y?x--:(x++,y--):y+1===dimension?x--:(x++,y++)}while(this.at(x,y)===this.constructor.AVOID&&x>-1);this.put(x,y,pixel)}))}codewordsFor(codewords){let bytePosition=0;const withErrorCorrection=[];return this.chunking.forEach((arr=>{for(let i=0;i<arr[0];i++){const data=codewords.slice(bytePosition,bytePosition+arr[2]);bytePosition+=arr[2];const errorCorrection=this.constructor.quotient(data,this.constructor.polynomial(arr[1]-arr[2]));withErrorCorrection.push(...data),withErrorCorrection.push(...errorCorrection)}})),withErrorCorrection}dataFor(codewords){const bits=[];codewords.forEach((byte=>{let remainder=byte;[128,64,32,16,8,4,2,1].forEach((subtract=>{remainder>=subtract?(bits.push(!0),remainder-=subtract):bits.push(!1)}))})),this.bits=bits;const dimension=this.content.length,encodedData=BooleanMatrix.withAll(dimension,dimension,!1);for(let y=0;y<dimension;y++)for(let x=0;x<dimension;x++){const pixel=this.at(x,y);this.isDataPixel(pixel)&&encodedData.put(x,y,bits[this.chunkingOffsets[pixel.chunk]+8*pixel.byte+pixel.bit])}return encodedData}isDataPixel(pixel){return pixel!==this.constructor.AVOID&&pixel!==this.constructor.AVAILABLE}maskedDataFor(data){const dimension=data.height;return this.constructor.masks.map((mask=>{const masked=BooleanMatrix.withAll(dimension,dimension);for(let x=0;x<dimension;x++)for(let y=0;y<dimension;y++){let value=data.at(x,y);this.at(x,y)!==QRCodeMap.AVOID&&mask.at(x%12,y%12)&&(value=!value),masked.put(x,y,value)}return masked}))}asIntegerArray(){return this.content.map((row=>{let integer=0;return row.forEach((pixel=>{integer*=2,this.isDataPixel(pixel)&&integer++})),integer}))}}QRCodeMap.AVAILABLE="available",QRCodeMap.AVOID="avoid",QRCodeMap.GENERATOR_FUNCTIONS=[(x,y)=>(x+y)%2==0,(x,y)=>y%2==0,x=>x%3==0,(x,y)=>(x+y)%3==0,(x,y)=>((y-y%2)/2+(x-x%3)/3)%2==0,(x,y)=>x*y%2+x*y%3==0,(x,y)=>(x*y+x*y%3)%2==0,(x,y)=>(x*y%3+x+y)%2==0],QRCodeMap.instances={},QRCodeMap.maskArray=[],QRCodeMap.polynomials=[new Uint8Array(2)];class QRCode$1{static alignmentPatternPositions(version){let locations=ALIGNMENT_PATTERN_LOCATIONS[version-1];if(0===locations.length)return[];const positions=[],first=locations[0];return locations.slice(1,locations.length-1).forEach((location=>{positions.push({x:first,y:location}),positions.push({x:location,y:first})})),locations=locations.slice(1),locations.forEach((y=>{locations.forEach((x=>{positions.push({x,y})}))})),positions}static finderPatternPositions(version){const far=4*version+10;return[{x:0,y:0},{x:0,y:far},{x:far,y:0}]}static timingPatternPositions(version){const positions=[],far=4*version+9;for(let position=8;position<far;position+=2)positions.push({x:position,y:6}),positions.push({x:6,y:position});return positions}constructor(content,options){if(void 0===content||0===content.length)throw"no content to encode";this.content=content,this.options=options||{},"eci"in this.options&&(this.eci=this.options.eci),"errorCorrection"in this.options&&(this.errorCorrection=this.options.errorCorrection)}get alignmentPatternPositions(){return this.constructor.alignmentPatternPositions(this.version)}get dimension(){return 4*this.version+17}get encoding(){return this._encoding}set encoding(string){this._encoding=string}get finderPatternPositions(){return this.constructor.finderPatternPositions(this.version)}get hasEci(){return void 0!==this.eci&&3!==this.eci}get hasAlignmentPattern(){return this.version>1}get timingPatternPositions(){return this.constructor.timingPatternPositions(this.version)}}QRCode$1.MAX_VERSION=40;var qrcode={ENCODING,ERROR_CORRECTION,BitWriter,Matrix:Matrix$1,BooleanMatrix,QRCodeMap,QRCode:QRCode$1,QRCodeEncoder:class QRCodeEncoder$1{constructor(contents,options){this.code=new QRCode$1(contents,options),this.encode()}encode(){this.initializeEncoding(),this.initializeVersion(),this.initializeCodewords(),this.initializeMapping(),this.initializeMasking()}initializeCodewords(){const writer=new BitWriter(DATA_CAPACITY[this.code.errorCorrection][this.code.version-1]);switch(this.code.encoding){case ENCODING.NUMERIC:writer.nextPutBits(1,4),this.code.version<10?writer.nextPutBits(this.length,10):this.code.version<27?writer.nextPutBits(this.length,12):writer.nextPutBits(this.length,14),writer.nextPutNumeric(this.code.content);break;case ENCODING.ALPHANUMERIC:writer.nextPutBits(2,4),this.code.version<10?writer.nextPutBits(this.length,9):this.code.version<27?writer.nextPutBits(this.length,11):writer.nextPutBits(this.length,13),writer.nextPutAlphaNUMERIC(this.code.content);break;case ENCODING.KANJI:writer.nextPutBits(8,8),this.code.version<10?writer.nextPutBits(this.length,8):this.code.version<27?writer.nextPutBits(this.length,10):writer.nextPutBits(this.length,12),writer.nextPutKanji(this.code.content);break;case ENCODING.BYTE:this.code.hasEci&&(writer.nextPutBits(7,4),this.code.eci<128?(writer.nextPutBits(0,1),writer.nextPutBits(this.code.eci,7)):this.code.eci<16384?(writer.nextPutBits(2,2),writer.nextPutBits(this.code.eci,14)):(writer.nextPutBits(6,3),writer.nextPutBits(this.code.eci,21))),writer.nextPutBits(4,4),this.code.version<10?writer.nextPutBits(this.length,8):writer.nextPutBits(this.length,16),writer.nextPutByte(this.bytes)}writer.bitsLeft>3&&writer.nextPutBits(0,4);const bytesLeft=writer.bytesLeft;for(let index=0;index<bytesLeft;index++)writer.nextPutCompleteByte(index%2==0?236:17);this.codewords=writer.content}initializeEncoding(){if(this.code.hasEci)if(this.code.encoding=ENCODING.BYTE,3===this.code.eci){this.length=this.code.content.length,this.bytes=[];for(let i=0;i<length;i++)this.bytes.push(this.code.content.charCodeAt(i)%128)}else if(25===this.code.eci)this.bytes=this.toUtf16Bytes(this.code.content),this.length=this.bytes.length;else if(26===this.code.eci)this.bytes=this.toUtf8Bytes(this.code.content),this.length=this.bytes.length;else{this.length=this.code.content.length,this.bytes=[];for(let i=0;i<length;i++)this.bytes.push(this.code.content.charCodeAt(i)%256)}else/^\d*$/.test(this.code.content)?(this.code.encoding=ENCODING.NUMERIC,this.length=this.code.content.length):/^[A-Z\d\dA-Z $%*+-./:]+$/.test(this.code.content)?(this.code.encoding=ENCODING.ALPHANUMERIC,this.length=this.code.content.length):/^[\u8140-\u9ffc\ue040-\uebbf]+$/.test(this.code.content)?(this.code.encoding=ENCODING.KANJI,this.length=this.code.content.length):(this.code.encoding=ENCODING.BYTE,this.bytes=this.toUtf8Bytes(this.code.content),this.length=this.bytes.length,this.code.eci=this.length===this.code.content.length?3:26)}initializeMapping(){this.map=QRCodeMap.for(this.code.errorCorrection,this.code.version),this.mapCodewords=this.map.codewordsFor(this.codewords),this.mapData=this.map.dataFor(this.mapCodewords)}initializeMasking(){const choices=this.map.maskedDataFor(this.mapData);let data,dataIndex,lowestPenalty=1e6;choices.forEach(((matrix,index)=>{const penalty=this.penaltyForMatrix(matrix);penalty<lowestPenalty&&(lowestPenalty=penalty,data=matrix,dataIndex=index)})),this.lowestPenalty=lowestPenalty;let format=[1,0,3,2][this.errorCorrections.indexOf(this.code.errorCorrection)];format=1024*(8*format+dataIndex);let errorCorrection=format;for(let i=14;i>=10;i--)errorCorrection>=Math.pow(2,i)&&(errorCorrection=1335*Math.pow(2,i-10)^errorCorrection);format=format+errorCorrection^21522;const dimension=this.code.dimension;if([[8,0,dimension-1,8],[8,1,dimension-2,8],[8,2,dimension-3,8],[8,3,dimension-4,8],[8,4,dimension-5,8],[8,5,dimension-6,8],[8,7,dimension-7,8],[8,8,dimension-8,8],[7,8,8,dimension-7],[5,8,8,dimension-6],[4,8,8,dimension-5],[3,8,8,dimension-4],[2,8,8,dimension-3],[1,8,8,dimension-2],[0,8,8,dimension-1]].forEach(((arr,index)=>{(Math.pow(2,index)&format)>0&&(data.put(arr[0],arr[1],!0),data.put(arr[2],arr[3],!0))})),data.put(8,dimension-8,!0),this.code.version>6){let bitVersion=4096*this.code.version;errorCorrection=bitVersion;for(let i=17;i>=12;i--)errorCorrection>=Math.pow(2,i)&&(errorCorrection=7973*Math.pow(2,i-12)^errorCorrection);bitVersion+=errorCorrection;let count=0;for(let x=0;x<6;x++)for(let y=dimension-11;y<=dimension-9;y++)(Math.pow(2,count)&bitVersion)>0&&(data.put(x,y,!0),data.put(y,x,!0)),count++}this.code.data=data}initializeVersion(){if(this.errorCorrections.includes(this.code.errorCorrection)){let version=this.versionForLength(this.length,this.code.errorCorrection);if(version>QRCode$1.MAX_VERSION)throw"This content is too long to be encoded for the specified error correction.";this.code.version=version}else{let versions=this.errorCorrections.map((errorCorrection=>this.versionForLength(this.length,errorCorrection))),version=versions[0];if(version>QRCode$1.MAX_VERSION)throw"This string is too long to be encoded.";this.code.version=version;for(let index=3;index>=0;index--)if(versions[index]===version)return void(this.code.errorCorrection=this.errorCorrections[index])}}capacity(encoding,errorCorrection){return{NUMERIC:{LOW:[41,77,127,187,255,322,370,461,552,652,772,883,1022,1101,1250,1408,1548,1725,1903,2061,2232,2409,2620,2812,3057,3283,3517,3669,3909,4158,4417,4686,4965,5253,5529,5836,6153,6479,6743,7089],MEDIUM:[34,63,101,149,202,255,293,365,432,513,604,691,796,871,991,1082,1212,1346,1500,1600,1708,1872,2059,2188,2395,2544,2701,2857,3035,3289,3486,3693,3909,4134,4343,4588,4775,5039,5313,5596],QUARTER:[27,48,77,111,144,178,207,259,312,364,427,489,580,621,703,775,876,948,1063,1159,1224,1358,1468,1588,1718,1804,1933,2085,2181,2358,2473,2670,2805,2949,3081,3244,3417,3599,3791,3993],HIGH:[17,34,58,82,106,139,154,202,235,288,331,374,427,468,530,602,674,746,813,919,969,1056,1108,1228,1286,1425,1501,1581,1677,1782,1897,2022,2157,2301,2361,2524,2625,2735,2927,3057]},ALPHANUMERIC:{LOW:[25,47,77,114,154,195,224,279,335,395,468,535,619,667,758,854,938,1046,1153,1249,1352,1460,1588,1704,1853,1990,2132,2223,2369,2520,2677,2840,3009,3183,3351,3537,3729,3927,4087,4296],MEDIUM:[20,38,61,90,122,154,178,221,262,311,366,419,483,528,600,656,734,816,909,970,1035,1134,1248,1326,1451,1542,1637,1732,1839,1994,2113,2238,2369,2506,2632,2780,2894,3054,3220,3391],QUARTER:[16,29,47,67,87,108,125,157,189,221,259,296,352,376,426,470,531,574,644,702,742,823,890,963,1041,1094,1172,1263,1322,1429,1499,1618,1700,1787,1867,1966,2071,2181,2298,2420],HIGH:[10,20,35,50,64,84,93,122,143,174,200,227,259,283,321,365,408,452,493,557,587,640,672,744,779,864,910,958,1016,1080,1150,1226,1307,1394,1431,1530,1591,1658,1774,1852]},KANJI:{LOW:[10,20,32,48,65,82,95,118,141,167,198,226,262,282,320,361,397,442,488,528,572,618,672,721,784,842,902,940,1002,1066,1132,1201,1273,1347,1417,1496,1577,1661,1729,1817],MEDIUM:[8,16,26,38,52,65,75,93,111,131,155,177,204,223,254,277,310,345,384,410,438,480,528,561,614,652,692,732,778,843,894,947,1002,1060,1113,1176,1224,1292,1362,1435],QUARTER:[7,12,20,28,37,45,53,66,80,93,109,125,149,159,180,198,224,243,272,297,314,348,376,407,440,462,496,534,559,604,634,684,719,756,790,832,876,923,972,1024],HIGH:[4,8,15,21,27,36,39,52,60,74,85,96,109,120,136,154,173,191,208,235,248,270,284,315,330,365,385,405,430,457,486,518,553,590,605,647,673,701,750,784]},BYTE:{LOW:[17,32,53,78,106,134,154,192,230,271,321,367,425,458,520,586,644,718,792,858,929,1003,1091,1171,1273,1367,1465,1528,1628,1732,1840,1952,2068,2188,2303,2431,2563,2699,2809,2953],MEDIUM:[14,26,42,62,84,106,122,152,180,213,251,287,331,362,412,450,504,560,624,666,711,779,857,911,997,1059,1125,1190,1264,1370,1452,1538,1628,1722,1809,1911,1989,2099,2213,2331],QUARTER:[11,20,32,46,60,74,86,108,130,151,177,203,241,258,292,322,364,394,442,482,509,565,611,661,715,751,805,868,908,982,1030,1112,1168,1228,1283,1351,1423,1499,1579,1663],HIGH:[7,14,24,34,44,58,64,84,98,119,137,155,177,194,220,250,280,310,338,382,403,439,461,511,535,593,625,658,698,742,790,842,898,958,983,1051,1093,1139,1219,1273]}}[encoding][errorCorrection]}get errorCorrections(){return[ERROR_CORRECTION.LOW,ERROR_CORRECTION.MEDIUM,ERROR_CORRECTION.QUARTER,ERROR_CORRECTION.HIGH]}penaltyForMatrix(matrix){let penalty=0;const dimension=matrix.content.length;let current,last,run,runTest,finderPattern;for(let y=0;y<dimension-1;y++){current=matrix.bitAt(0,y),last=current,run=1,runTest=current,finderPattern=current;for(let x=1;x<10;x++)current=matrix.bitAt(x,y),last===current?matrix.bitAt(x,y+1)===last&&matrix.bitAt(x-1,y+1)===last&&(penalty+=3):last=current,runTest===current?run++:(run>4&&(penalty+=run-2),run=1,runTest=current),finderPattern=2*finderPattern+current;for(let x=10;x<dimension;x++)current=matrix.bitAt(x,y),last===current?matrix.bitAt(x,y+1)===last&&matrix.bitAt(x-1,y+1)===last&&(penalty+=3):last=current,runTest===current?run++:(run>4&&(penalty+=run-2),run=1,runTest=current),finderPattern=(2*finderPattern+current)%2048,1488!==finderPattern&&93!==finderPattern||(penalty+=40);run>4&&(penalty+=run-2)}let lastY=dimension-1;current=matrix.bitAt(0,lastY),run=1,runTest=current,finderPattern=current;for(let x=1;x<10;x++)current=matrix.bitAt(x,lastY),runTest===current?run++:(run>4&&(penalty+=run-2),run=1,runTest=current),finderPattern=2*finderPattern+current;for(let x=10;x<dimension;x++)current=matrix.bitAt(x,lastY),runTest===current?run++:(run>4&&(penalty+=run-2),run=1,runTest=current),finderPattern=(2*finderPattern+current)%2048,1488!==finderPattern&&93!==finderPattern||(penalty+=40);run>4&&(penalty+=run-2);let count=0;for(let x=0;x<dimension;x++){current=matrix.bitAt(x,0),count+=current,run=1,runTest=current,finderPattern=current;for(let y=1;y<10;y++)current=matrix.bitAt(x,y),count+=current,runTest===current?run++:(run>4&&(penalty+=run-2),run=1,runTest=current),finderPattern=2*finderPattern+current;for(let y=10;y<dimension;y++)current=matrix.bitAt(x,y),count+=current,runTest===current?run++:(run>4&&(penalty+=run-2),run=1,runTest=current),finderPattern=(2*finderPattern+current)%2048,1488!==finderPattern&&93!==finderPattern||(penalty+=40);run>4&&(penalty+=run-2)}return penalty+=Math.floor(10*Math.abs(count/(dimension*dimension)-.5)),penalty}toUtf16Bytes(string){const bytes=[];for(let i=0;i<string.length;i++){let code=string.charCodeAt(i),remainder=code%256,quotient=(code-remainder)/256;bytes.push(quotient),bytes.push(remainder)}return bytes}toUtf8Bytes(string){const bytes=[];let position=0;for(let i=0;i<string.length;i++){let code=string.charCodeAt(i);code<128?bytes[position++]=code:code<2048?(bytes[position++]=code>>6|192,bytes[position++]=63&code|128):55296==(64512&code)&&i+1<string.length&&56320==(64512&string.charCodeAt(i+1))?(code=65536+((1023&code)<<10)+(1023&string.charCodeAt(++i)),bytes[position++]=code>>18|240,bytes[position++]=code>>12&63|128,bytes[position++]=code>>6&63|128,bytes[position++]=63&code|128):(bytes[position++]=code>>12|224,bytes[position++]=code>>6&63|128,bytes[position++]=63&code|128)}return bytes}versionForLength(length,errorCorrection){let capacity;capacity=this.code.hasEci?DATA_CAPACITY[errorCorrection]:this.capacity(this.code.encoding,errorCorrection);let index=capacity.findIndex((allows=>allows>=length));return-1===index?100:index+1}}};const{QRCode,QRCodeEncoder}=qrcode;class SquareQRCodeEncoder$1 extends QRCodeEncoder{encode(){this.initializeEncoding();for(const errorCorrection of this.errorCorrections)if(this.code.errorCorrection=errorCorrection,this.initializeVersion(),!(this.code.version<this.minimumVersion)&&(this.initializeCodewords(),this.initializeMapping(),this.initializeMasking(),this.lowestPenalty<this.constructor.PENALTY_FOR_NEGATIVE_CAPACITY))return this.initializeTurtleData(),void this.initializeSvg();for(let version=Math.max(this.minimumVersion,this.code.version+1);version<=QRCode.MAX_VERSION;version++)if(this.code.version=version,this.initializeCodewords(),this.initializeMapping(),this.initializeMasking(),this.lowestPenalty<this.constructor.PENALTY_FOR_NEGATIVE_CAPACITY)return this.initializeTurtleData(),void this.initializeSvg()}initializeSvg(){const offset=this.svgOffset,dimension=this.svgDimension,foregroundStyle=this.svgForegroundStyle,backgroundStyle=this.svgBackgroundStyle,source=[];source.push(this.svgTag(dimension)),source.push("<defs>"),source.push(this.svgFinderPattern(foregroundStyle)),source.push("</defs>"),source.push(this.svgBackground(backgroundStyle,dimension,0===offset?void 0:offset/2)),this.svgFinderPatterns(source,offset),this.svgTurtle(source,foregroundStyle,offset),source.push("</svg>"),this.svg=source.join("")}initializeTurtleData(){const data=this.code.data.copy();for(const point of this.code.timingPatternPositions)data.put(point.x,point.y,!0);for(const point of this.code.alignmentPatternPositions)data.fillAlignmentPatternAt(point.x,point.y);this.turtleData=data}get inverted(){const inverted=this.code.options.invert;return void 0!==inverted&&inverted}get hasBorder(){const hasBorder=this.code.options.border;return void 0!==hasBorder&&hasBorder}get minimumVersion(){return 1}async png(){if(void 0!==this._png)return this._png;if(void 0===this.svg)throw"no SVG to convert to PNG";const image=new Image,imageBlob=new Blob([this.svg],{type:"image/svg+xml;charset=utf-8"});image.src=URL.createObjectURL(imageBlob),await image.decode();const dimension=this.svgDimension,canvas=document.createElement("canvas");return canvas.width=dimension,canvas.height=dimension,canvas.getContext("2d").drawImage(image,0,0,dimension,dimension),this._png=canvas.toDataURL(),this._png}svgBackground(style,dimension,cornerRadius){return""===style?"":void 0===cornerRadius?`<rect ${style} x="0" y="0" width="${dimension}" height="${dimension}" />`:`<rect ${style} x="0" y="0" width="${dimension}" height="${dimension}" rx="${cornerRadius}" ry="${cornerRadius}" />`}get svgBackgroundStyle(){const fromOptions=this.code.options.styleBackground;return void 0!==fromOptions?fromOptions:this.inverted?'fill="black"':'fill="white"'}get svgDimension(){return 2*this.svgOffset+8*this.code.dimension}svgFinderPattern(style){return`<path id="f" ${style} fill-rule="evenodd" d="M 0 10 a10,10 0 0 1 10,-10 h36 a10,10 0 0 1 10,10 v36 a10,10 0 0 1 -10,10 h-36 a10,10 0 0 1 -10,-10 Z M 8 10 a2,2 0 0 1 2,-2 h36 a2,2 0 0 1 2,2 v36 a2,2 0 0 1 -2,2 h-36 a2,2 0 0 1 -2,-2 Z M 16 18 a2,2 0 0 1 2,-2 h20 a2,2 0 0 1 2,2 v20 a2,2 0 0 1 -2,2 h-20 a2,2 0 0 1 -2,-2 Z" />`}svgFinderPatterns(source,offset){for(const point of this.code.finderPatternPositions)source.push(`<use xlink:href="#f" x="${8*point.x+offset}" y="${8*point.y+offset}" />`)}get svgForegroundStyle(){const fromOptions=this.code.options.styleForeground;return void 0!==fromOptions?fromOptions:this.inverted?'fill="white"':'fill="black"'}get svgOffset(){return this.hasBorder?32:0}svgTag(dimension){return`<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="${dimension}" height="${dimension}" viewBox="0 0 ${dimension} ${dimension}">`}svgTurtle(source,style,offset){const dimension=this.code.dimension;for(let y=0;y<dimension;y++)for(let x=0;x<dimension;x++)this.turtleData.at(x,y)&&source.push(new Turtle(this.turtleData,style,offset,x,y).element)}}SquareQRCodeEncoder$1.PENALTY_FOR_LEFTOVER_CAPACITY=[32,16,8,4,2,1],SquareQRCodeEncoder$1.PENALTY_FOR_NEGATIVE_CAPACITY=1e4;class Turtle{constructor(data,style,offset,x,y){this.data=data,this.dimension=data.width,this.style=style||"",this.offset=offset||0,this.start={x,y},this.visitedLocations=new Set,this.generateElement(),this.clearVisited()}clearVisited(){this.visitedLocations.forEach((location=>{const point=this.fromLocation(location);this.data.put(point.x,point.y,!1)}))}get element(){return this._element}fromLocation(location){const x=location%this.dimension;return{x,y:(location-x)/this.dimension}}generateElement(){const startX=this.start.x,startY=this.start.y;let x=startX,y=startY;const outsideEdges=[];outsideEdges.push("left");let edge="top";const tops=new Set,rights=new Set,bottoms=new Set,lefts=new Set;for(lefts.add(this.toLocation(x,y));x!==startX||y!==startY||"left"!==edge;){outsideEdges.push(edge);const location=this.toLocation(x,y);switch(this.visitLocation(location),edge){case"top":tops.add(location),this.hasPixelAtCoordinate(x+1,y)?this.hasPixelAtCoordinate(x+1,y-1)?(x+=1,y-=1,edge="left"):x+=1:edge="right";break;case"right":rights.add(location),this.hasPixelAtCoordinate(x,y+1)?this.hasPixelAtCoordinate(x+1,y+1)?(x+=1,y+=1,edge="top"):y+=1:edge="bottom";break;case"bottom":bottoms.add(location),this.hasPixelAtCoordinate(x-1,y)?this.hasPixelAtCoordinate(x-1,y+1)?(x-=1,y+=1,edge="right"):x-=1:edge="left";break;case"left":lefts.add(location),this.hasPixelAtCoordinate(x,y-1)?this.hasPixelAtCoordinate(x-1,y-1)?(x-=1,y-=1,edge="bottom"):y-=1:edge="top"}}if(4===outsideEdges.length)return void(this._element=`<rect ${this.style} x="${8*startX+this.offset}" y="${8*startY+this.offset}" width="8" height="8" rx="2" ry="2" />`);let d=[];d.push(`M${8*startX+this.offset+1} ${8*startY+this.offset+4}`);let now,next=outsideEdges[0];outsideEdges.push(next);let length=0;for(let i=1;i<outsideEdges.length;i++)now=next,next=outsideEdges[i],now===next?length+=8:"top"===now&&"right"===next?(0!==length&&(d.push(`h${length}`),length=0),d.push("a3,3 0 0 1 3,3")):"right"===now&&"bottom"===next?(0!==length&&(d.push(`v${length}`),length=0),d.push("a3,3 0 0 1 -3,3")):"bottom"===now&&"left"===next?(0!==length&&(d.push(`h-${length}`),length=0),d.push("a3,3 0 0 1 -3,-3")):"left"===now&&"top"===next?(0!==length&&(d.push(`v-${length}`),length=0),d.push("a3,3 0 0 1 3,-3")):"top"===now&&"left"===next?(d.push(`h${length+5}`),length=5):"right"===now&&"top"===next?(d.push(`v${length+5}`),length=5):"bottom"===now&&"right"===next?(d.push(`h-${length+5}`),length=5):"left"===now&&"bottom"===next&&(d.push(`v-${length+5}`),length=5);length>0&&d.push(`v-${length}`),d.push("z");let interior=new Set,process=new Set;for(this.visitedLocations.forEach((location=>{tops.has(location)||process.add(location-this.dimension),lefts.has(location)||process.add(location-1),bottoms.has(location)||process.add(location+this.dimension),rights.has(location)||process.add(location+1)})),process=[...process].filter((location=>!this.hasVisitedLocation(location)));process.length>0;){let fanOutFrom=[];process.forEach((location=>{this.hasPixelAtLocation(location)?(this.visitLocation(location),fanOutFrom.push(location)):interior.add(location)})),process=new Set,fanOutFrom.forEach((location=>{process.add(location-this.dimension),process.add(location+this.dimension),process.add(location+1),process.add(location-1)})),process=[...process].filter((location=>!this.hasVisitedLocation(location)))}for(;interior.size>0;){let topRight,topRightX,topRightY;interior.forEach((location=>{x=location%this.dimension,y=(location-x)/this.dimension,(void 0===topRight||y<topRightY||y===topRightY&&x>topRightX)&&(topRight=location,topRightX=x,topRightY=y)})),d.push(`M${8*topRightX+this.offset+9} ${8*topRightY+this.offset-1}`),x=topRightX,y=topRightY,edge="top";let distance=5;for(;x!==topRightX||y!==topRightY||"right"!==edge;){const location=this.toLocation(x,y);switch(interior.delete(location),edge){case"top":this.hasPixelAtCoordinate(x-1,y-1)?this.hasPixelAtCoordinate(x-1,y)?(d.push(`h-${distance+5}`),distance=5,edge="left"):(distance+=8,x--):(distance>0&&d.push(`h-${distance}`),d.push("a3,3 0 0 1 -3,-3"),distance=0,edge="right",x--,y--);break;case"left":this.hasPixelAtCoordinate(x-1,y+1)?this.hasPixelAtCoordinate(x,y+1)?(d.push(`v${distance+5}`),distance=5,edge="bottom"):(distance+=8,y++):(distance>0&&d.push(`v${distance}`),d.push("a3,3 0 0 1 -3,3"),distance=0,edge="top",x--,y++);break;case"bottom":this.hasPixelAtCoordinate(x+1,y+1)?this.hasPixelAtCoordinate(x+1,y)?(d.push(`h${distance+5}`),distance=5,edge="right"):(distance+=8,x++):(distance>0&&d.push(`h${distance}`),d.push("a3,3 0 0 1 3,3"),distance=0,edge="left",x++,y++);break;case"right":this.hasPixelAtCoordinate(x+1,y-1)?this.hasPixelAtCoordinate(x,y-1)?(d.push(`v-${distance+5}`),distance=5,edge="top"):(distance+=8,y--):(distance>0&&d.push(`v-${distance}`),d.push("a3,3 0 0 1 3,-3"),distance=0,edge="bottom",x++,y--)}}d.push(`v-${distance+5}`),d.push("z")}this._element=`<path ${this.style} d="${d.join("")}" />`}hasPixelAtCoordinate(x,y){return!(x>=this.dimension||x<0||y>=this.dimension||y<0)&&this.data.at(x,y)}hasPixelAtLocation(location){const x=location%this.dimension,y=(location-x)/this.dimension;return this.data.at(x,y)}hasVisitedCoordinate(x,y){return this.hasVisitedLocation(this.toLocation(x,y))}hasVisitedLocation(location){return this.visitedLocations.has(location)}toLocation(x,y){return this.dimension*y+x}visitCoordinate(x,y){this.visitLocation(this.toLocation(x,y))}visitLocation(location){this.visitedLocations.add(location)}}var squareQrcode={SquareQRCodeEncoder:SquareQRCodeEncoder$1,Turtle};const{Matrix}=qrcode,{SquareQRCodeEncoder}=squareQrcode,JEWEL_VALUE=Object.freeze({AVAILABLE:"AVAILABLE",FALSE:"FALSE",TRUE:"TRUE",UNDECIDED:"UNDECIDED"});var qrcodeEncoder={...{MarketQRCodeEncoder:class MarketQRCodeEncoder extends SquareQRCodeEncoder{static getJewel(){if(void 0!==this.jewel)return this.jewel;const jewel=Matrix.withAll(9,9,JEWEL_VALUE.UNDECIDED);jewel.put(0,0,JEWEL_VALUE.AVAILABLE),jewel.put(0,8,JEWEL_VALUE.AVAILABLE),jewel.put(8,0,JEWEL_VALUE.AVAILABLE),jewel.put(8,8,JEWEL_VALUE.AVAILABLE);for(let offset=0;offset<7;offset++)jewel.put(offset+1,0,JEWEL_VALUE.FALSE),jewel.put(offset+1,8,JEWEL_VALUE.FALSE),jewel.put(0,offset+1,JEWEL_VALUE.FALSE),jewel.put(8,offset+1,JEWEL_VALUE.FALSE);jewel.put(3,3,JEWEL_VALUE.FALSE),jewel.put(3,5,JEWEL_VALUE.FALSE),jewel.put(5,3,JEWEL_VALUE.FALSE),jewel.put(5,5,JEWEL_VALUE.FALSE);for(let offset=0;offset<6;offset++)jewel.put(1+offset,1,JEWEL_VALUE.TRUE),jewel.put(2+offset,7,JEWEL_VALUE.TRUE),jewel.put(7,1+offset,JEWEL_VALUE.TRUE),jewel.put(1,2+offset,JEWEL_VALUE.TRUE);return jewel.put(4,4,JEWEL_VALUE.TRUE),this.jewel=jewel,jewel}initializeSvg(){const offset=this.svgOffset,dimension=this.svgDimension,foregroundStyle=this.svgForegroundStyle,logoStyle=this.svgLogoStyle,source=[];source.push(this.svgTag(dimension)),source.push("<defs>"),source.push(this.svgFinderPattern(foregroundStyle)),source.push(this.svgLogo(logoStyle)),source.push("</defs>"),source.push(this.svgBackground(this.svgBackgroundStyle,dimension,0===offset?void 0:16)),this.svgFinderPatterns(source,offset),this.svgTurtle(source,foregroundStyle,offset);const logoPosition=4*(this.code.dimension-7)+offset;source.push(`<use xlink:href="#s" x="${logoPosition}" y="${logoPosition}" />`),source.push("</svg>"),this.svg=source.join("")}initializeTurtleData(){super.initializeTurtleData();const start=(this.code.dimension-9)/2;this.turtleData.fill(start,start+1,9,7,!1),this.turtleData.fill(start+1,start,7,1,!1),this.turtleData.fill(start+1,start+8,7,1,!1)}get isMonochrome(){const isMonochrome=this.code.options.monochrome;return void 0!==isMonochrome&&isMonochrome}get minimumVersion(){return 2}penaltyForMatrix(matrix){const errorCorrectionCapacity=this.map.errorCorrectionCapacity,messedUpBytes=errorCorrectionCapacity.map((()=>new Set)),jewel=this.constructor.getJewel(),start=(matrix.content.length-9)/2;for(let y=0;y<9;y++){const yData=y+start;for(let x=0;x<9;x++){const xData=x+start,pixel=this.map.at(xData,yData);if(this.map.isDataPixel(pixel))switch(jewel.at(x,y)){case JEWEL_VALUE.FALSE:!1!==matrix.at(xData,yData)&&messedUpBytes[pixel.chunk].add(pixel.byte);break;case JEWEL_VALUE.TRUE:!0!==matrix.at(xData,yData)&&messedUpBytes[pixel.chunk].add(pixel.byte);break;case JEWEL_VALUE.UNDECIDED:messedUpBytes[pixel.chunk].add(pixel.byte)}}}let penalty=0;return errorCorrectionCapacity.forEach(((capacity,index)=>{const leftoverCapacity=capacity-2*messedUpBytes[index].size;leftoverCapacity<0?penalty+=this.constructor.PENALTY_FOR_NEGATIVE_CAPACITY:leftoverCapacity<this.constructor.PENALTY_FOR_LEFTOVER_CAPACITY.length&&(penalty+=this.constructor.PENALTY_FOR_LEFTOVER_CAPACITY[leftoverCapacity])})),matrix.at(start,start)||penalty++,matrix.at(start,start+8)||penalty++,matrix.at(start+8,start)||penalty++,matrix.at(start+8,start+8)||penalty++,penalty}get svgForegroundStyle(){const fromOptions=this.code.options.styleForeground;return void 0!==fromOptions?fromOptions:this.inverted?this.isMonochrome?'fill="white"':'fill="white" fill-opacity="0.95"':this.isMonochrome?'fill="black"':'fill="black" fill-opacity="0.9"'}get svgLogoStyle(){if(this.isMonochrome)return this.svgForegroundStyle;const fromOptions=this.code.options.styleLogo;return void 0!==fromOptions?fromOptions:'fill="#006AFF"'}svgLogo(style){return`<path id="s" ${style} fill-rule="evenodd" d="M 0 9.8 C 0 3.92 3.92 0 9.8 0 L 46.2 0 C 52.08 0 56 3.92 56 9.8 L 56 46.2 C 56 52.08 52.08 56 46.2 56 L 9.8 56 C 3.92 56 0 52.08 0 46.2 Z M 11.2 14 C 11.2 12.32 12.32 11.2 14 11.2 L 42 11.2 C 43.68 11.2 44.8 12.32 44.8 14 L 44.8 42 C 44.8 43.68 43.68 44.8 42 44.8 L 14 44.8 C 12.32 44.8 11.2 43.68 11.2 42 Z M 21 22.4 C 21 21.7 21.7 21 22.4 21 L 33.6 21 C 34.3 21 35 21.7 35 22.4 L 35 33.6 C 35 34.3 34.3 35 33.6 35 L 22.4 35 C 21.7 35 21 34.3 21 33.6 Z" />`}get svgOffset(){return this.hasBorder?48:0}},JEWEL_VALUE},...qrcode,...squareQrcode};const MarketQrcode=class{constructor(hostRef){(0,_index_fb35cab8_js__WEBPACK_IMPORTED_MODULE_0__.r)(this,hostRef),this.content="",this.size=void 0,this.border=!1,this.monochrome=!1}render(){const encoder=this.content?new qrcodeEncoder.MarketQRCodeEncoder(this.content,{border:this.border,styleBackground:this.border?'class="background"':"",styleForeground:'class="foreground"',styleLogo:'class="logo"'}):null,containerStyle=void 0!==this.size?{height:`${this.size}px`,width:`${this.size}px`}:null;return(0,_index_fb35cab8_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_fb35cab8_js__WEBPACK_IMPORTED_MODULE_0__.H,{key:"f0772d7990afdd98e660a2d5760f8c3c105a5b98",class:"market-qrcode","aria-hidden":"true"},(0,_index_fb35cab8_js__WEBPACK_IMPORTED_MODULE_0__.h)("div",{key:"ceb6ff97d333a2eb0f044823f6246db75e1a4625",innerHTML:encoder?encoder.svg:"",style:containerStyle}))}};MarketQrcode.style=":host{display:block}:host svg .foreground{fill:var(--qrcode-normal-variant-foreground-color)}:host svg .background{fill:var(--qrcode-normal-variant-background-color)}:host svg .logo{fill:var(--qrcode-normal-variant-icon-color)}:host([monochrome]) .foreground{fill:var(--qrcode-monochrome-variant-foreground-color)}:host([monochrome]) .background{fill:var(--qrcode-monochrome-variant-background-color)}:host([monochrome]) .logo{fill:var(--qrcode-monochrome-variant-icon-color)}:host([size]) svg{width:100%;height:100%}"}}]);